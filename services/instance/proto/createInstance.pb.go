// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/createInstance.proto

/*
Package createInstance is a generated protocol buffer package.

It is generated from these files:
	proto/createInstance.proto

It has these top-level messages:
	CreateInstanceRequest
	CreateInstanceResponse
	DeleteInstanceRequest
	DeleteInstanceResponse
	GetInstanceRequest
	GetInstanceResponse
*/
package createInstance

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateInstanceRequest struct {
	CompanyId         int32                                      `protobuf:"varint,1,opt,name=companyId" json:"companyId,omitempty"`
	Project           string                                     `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
	Zone              string                                     `protobuf:"bytes,3,opt,name=zone" json:"zone,omitempty"`
	RequestId         string                                     `protobuf:"bytes,4,opt,name=requestId" json:"requestId,omitempty"`
	InstanceName      string                                     `protobuf:"bytes,5,opt,name=instanceName" json:"instanceName,omitempty"`
	MinCpuPlatform    string                                     `protobuf:"bytes,6,opt,name=minCpuPlatform" json:"minCpuPlatform,omitempty"`
	MachineType       string                                     `protobuf:"bytes,7,opt,name=machineType" json:"machineType,omitempty"`
	Metadata          map[string]string                          `protobuf:"bytes,8,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Tags              *CreateInstanceRequest_TAGS                `protobuf:"bytes,9,opt,name=tags" json:"tags,omitempty"`
	Disks             []*CreateInstanceRequest_DISKS             `protobuf:"bytes,10,rep,name=disks" json:"disks,omitempty"`
	CanIpForward      bool                                       `protobuf:"varint,11,opt,name=canIpForward" json:"canIpForward,omitempty"`
	NetworkInterfaces []*CreateInstanceRequest_NETWORKINTERFACES `protobuf:"bytes,12,rep,name=networkInterfaces" json:"networkInterfaces,omitempty"`
	Description       string                                     `protobuf:"bytes,13,opt,name=description" json:"description,omitempty"`
	Labels            map[string]string                          `protobuf:"bytes,14,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Scheduling        *CreateInstanceRequest_SCHEDULING          `protobuf:"bytes,15,opt,name=scheduling" json:"scheduling,omitempty"`
}

func (m *CreateInstanceRequest) Reset()                    { *m = CreateInstanceRequest{} }
func (m *CreateInstanceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateInstanceRequest) ProtoMessage()               {}
func (*CreateInstanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateInstanceRequest) GetCompanyId() int32 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

func (m *CreateInstanceRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *CreateInstanceRequest) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *CreateInstanceRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *CreateInstanceRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *CreateInstanceRequest) GetMinCpuPlatform() string {
	if m != nil {
		return m.MinCpuPlatform
	}
	return ""
}

func (m *CreateInstanceRequest) GetMachineType() string {
	if m != nil {
		return m.MachineType
	}
	return ""
}

func (m *CreateInstanceRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *CreateInstanceRequest) GetTags() *CreateInstanceRequest_TAGS {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CreateInstanceRequest) GetDisks() []*CreateInstanceRequest_DISKS {
	if m != nil {
		return m.Disks
	}
	return nil
}

func (m *CreateInstanceRequest) GetCanIpForward() bool {
	if m != nil {
		return m.CanIpForward
	}
	return false
}

func (m *CreateInstanceRequest) GetNetworkInterfaces() []*CreateInstanceRequest_NETWORKINTERFACES {
	if m != nil {
		return m.NetworkInterfaces
	}
	return nil
}

func (m *CreateInstanceRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateInstanceRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateInstanceRequest) GetScheduling() *CreateInstanceRequest_SCHEDULING {
	if m != nil {
		return m.Scheduling
	}
	return nil
}

type CreateInstanceRequest_TAGS struct {
	Items []string `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *CreateInstanceRequest_TAGS) Reset()                    { *m = CreateInstanceRequest_TAGS{} }
func (m *CreateInstanceRequest_TAGS) String() string            { return proto.CompactTextString(m) }
func (*CreateInstanceRequest_TAGS) ProtoMessage()               {}
func (*CreateInstanceRequest_TAGS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *CreateInstanceRequest_TAGS) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

type CreateInstanceRequest_DISKS struct {
	Type             string                                        `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Boot             bool                                          `protobuf:"varint,2,opt,name=boot" json:"boot,omitempty"`
	Mode             string                                        `protobuf:"bytes,3,opt,name=mode" json:"mode,omitempty"`
	AutoDelete       bool                                          `protobuf:"varint,4,opt,name=autoDelete" json:"autoDelete,omitempty"`
	DeviceName       string                                        `protobuf:"bytes,5,opt,name=deviceName" json:"deviceName,omitempty"`
	InitializeParams *CreateInstanceRequest_DISKS_INITIALIZEPARAMS `protobuf:"bytes,6,opt,name=initializeParams" json:"initializeParams,omitempty"`
}

func (m *CreateInstanceRequest_DISKS) Reset()                    { *m = CreateInstanceRequest_DISKS{} }
func (m *CreateInstanceRequest_DISKS) String() string            { return proto.CompactTextString(m) }
func (*CreateInstanceRequest_DISKS) ProtoMessage()               {}
func (*CreateInstanceRequest_DISKS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *CreateInstanceRequest_DISKS) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateInstanceRequest_DISKS) GetBoot() bool {
	if m != nil {
		return m.Boot
	}
	return false
}

func (m *CreateInstanceRequest_DISKS) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *CreateInstanceRequest_DISKS) GetAutoDelete() bool {
	if m != nil {
		return m.AutoDelete
	}
	return false
}

func (m *CreateInstanceRequest_DISKS) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *CreateInstanceRequest_DISKS) GetInitializeParams() *CreateInstanceRequest_DISKS_INITIALIZEPARAMS {
	if m != nil {
		return m.InitializeParams
	}
	return nil
}

type CreateInstanceRequest_DISKS_INITIALIZEPARAMS struct {
	SourceImage string `protobuf:"bytes,1,opt,name=sourceImage" json:"sourceImage,omitempty"`
	DiskType    string `protobuf:"bytes,2,opt,name=diskType" json:"diskType,omitempty"`
	DiskSizeGb  int64  `protobuf:"varint,3,opt,name=diskSizeGb" json:"diskSizeGb,omitempty"`
}

func (m *CreateInstanceRequest_DISKS_INITIALIZEPARAMS) Reset() {
	*m = CreateInstanceRequest_DISKS_INITIALIZEPARAMS{}
}
func (m *CreateInstanceRequest_DISKS_INITIALIZEPARAMS) String() string {
	return proto.CompactTextString(m)
}
func (*CreateInstanceRequest_DISKS_INITIALIZEPARAMS) ProtoMessage() {}
func (*CreateInstanceRequest_DISKS_INITIALIZEPARAMS) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 2, 0}
}

func (m *CreateInstanceRequest_DISKS_INITIALIZEPARAMS) GetSourceImage() string {
	if m != nil {
		return m.SourceImage
	}
	return ""
}

func (m *CreateInstanceRequest_DISKS_INITIALIZEPARAMS) GetDiskType() string {
	if m != nil {
		return m.DiskType
	}
	return ""
}

func (m *CreateInstanceRequest_DISKS_INITIALIZEPARAMS) GetDiskSizeGb() int64 {
	if m != nil {
		return m.DiskSizeGb
	}
	return 0
}

type CreateInstanceRequest_NETWORKINTERFACES struct {
	Network       string                                                   `protobuf:"bytes,1,opt,name=network" json:"network,omitempty"`
	Subnetwork    string                                                   `protobuf:"bytes,2,opt,name=subnetwork" json:"subnetwork,omitempty"`
	AccessConfigs []*CreateInstanceRequest_NETWORKINTERFACES_ACCESSCONFIGS `protobuf:"bytes,3,rep,name=accessConfigs" json:"accessConfigs,omitempty"`
	AliasIpRanges []*CreateInstanceRequest_NETWORKINTERFACES_ALIASIPRANGES `protobuf:"bytes,4,rep,name=aliasIpRanges" json:"aliasIpRanges,omitempty"`
}

func (m *CreateInstanceRequest_NETWORKINTERFACES) Reset() {
	*m = CreateInstanceRequest_NETWORKINTERFACES{}
}
func (m *CreateInstanceRequest_NETWORKINTERFACES) String() string { return proto.CompactTextString(m) }
func (*CreateInstanceRequest_NETWORKINTERFACES) ProtoMessage()    {}
func (*CreateInstanceRequest_NETWORKINTERFACES) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 3}
}

func (m *CreateInstanceRequest_NETWORKINTERFACES) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *CreateInstanceRequest_NETWORKINTERFACES) GetSubnetwork() string {
	if m != nil {
		return m.Subnetwork
	}
	return ""
}

func (m *CreateInstanceRequest_NETWORKINTERFACES) GetAccessConfigs() []*CreateInstanceRequest_NETWORKINTERFACES_ACCESSCONFIGS {
	if m != nil {
		return m.AccessConfigs
	}
	return nil
}

func (m *CreateInstanceRequest_NETWORKINTERFACES) GetAliasIpRanges() []*CreateInstanceRequest_NETWORKINTERFACES_ALIASIPRANGES {
	if m != nil {
		return m.AliasIpRanges
	}
	return nil
}

type CreateInstanceRequest_NETWORKINTERFACES_ACCESSCONFIGS struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *CreateInstanceRequest_NETWORKINTERFACES_ACCESSCONFIGS) Reset() {
	*m = CreateInstanceRequest_NETWORKINTERFACES_ACCESSCONFIGS{}
}
func (m *CreateInstanceRequest_NETWORKINTERFACES_ACCESSCONFIGS) String() string {
	return proto.CompactTextString(m)
}
func (*CreateInstanceRequest_NETWORKINTERFACES_ACCESSCONFIGS) ProtoMessage() {}
func (*CreateInstanceRequest_NETWORKINTERFACES_ACCESSCONFIGS) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 3, 0}
}

func (m *CreateInstanceRequest_NETWORKINTERFACES_ACCESSCONFIGS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateInstanceRequest_NETWORKINTERFACES_ACCESSCONFIGS) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type CreateInstanceRequest_NETWORKINTERFACES_ALIASIPRANGES struct {
	IpCidrRange         string `protobuf:"bytes,1,opt,name=ipCidrRange" json:"ipCidrRange,omitempty"`
	SubnetworkRangeName string `protobuf:"bytes,2,opt,name=subnetworkRangeName" json:"subnetworkRangeName,omitempty"`
}

func (m *CreateInstanceRequest_NETWORKINTERFACES_ALIASIPRANGES) Reset() {
	*m = CreateInstanceRequest_NETWORKINTERFACES_ALIASIPRANGES{}
}
func (m *CreateInstanceRequest_NETWORKINTERFACES_ALIASIPRANGES) String() string {
	return proto.CompactTextString(m)
}
func (*CreateInstanceRequest_NETWORKINTERFACES_ALIASIPRANGES) ProtoMessage() {}
func (*CreateInstanceRequest_NETWORKINTERFACES_ALIASIPRANGES) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 3, 1}
}

func (m *CreateInstanceRequest_NETWORKINTERFACES_ALIASIPRANGES) GetIpCidrRange() string {
	if m != nil {
		return m.IpCidrRange
	}
	return ""
}

func (m *CreateInstanceRequest_NETWORKINTERFACES_ALIASIPRANGES) GetSubnetworkRangeName() string {
	if m != nil {
		return m.SubnetworkRangeName
	}
	return ""
}

type CreateInstanceRequest_SCHEDULING struct {
	Preemptible       bool   `protobuf:"varint,1,opt,name=preemptible" json:"preemptible,omitempty"`
	OnHostMaintenance string `protobuf:"bytes,2,opt,name=onHostMaintenance" json:"onHostMaintenance,omitempty"`
	AutomaticRestart  bool   `protobuf:"varint,3,opt,name=automaticRestart" json:"automaticRestart,omitempty"`
}

func (m *CreateInstanceRequest_SCHEDULING) Reset()         { *m = CreateInstanceRequest_SCHEDULING{} }
func (m *CreateInstanceRequest_SCHEDULING) String() string { return proto.CompactTextString(m) }
func (*CreateInstanceRequest_SCHEDULING) ProtoMessage()    {}
func (*CreateInstanceRequest_SCHEDULING) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 5}
}

func (m *CreateInstanceRequest_SCHEDULING) GetPreemptible() bool {
	if m != nil {
		return m.Preemptible
	}
	return false
}

func (m *CreateInstanceRequest_SCHEDULING) GetOnHostMaintenance() string {
	if m != nil {
		return m.OnHostMaintenance
	}
	return ""
}

func (m *CreateInstanceRequest_SCHEDULING) GetAutomaticRestart() bool {
	if m != nil {
		return m.AutomaticRestart
	}
	return false
}

type CreateInstanceResponse struct {
	InstanceName string `protobuf:"bytes,1,opt,name=instanceName" json:"instanceName,omitempty"`
}

func (m *CreateInstanceResponse) Reset()                    { *m = CreateInstanceResponse{} }
func (m *CreateInstanceResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateInstanceResponse) ProtoMessage()               {}
func (*CreateInstanceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateInstanceResponse) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

type DeleteInstanceRequest struct {
	CompanyId    int32  `protobuf:"varint,1,opt,name=companyId" json:"companyId,omitempty"`
	Project      string `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
	Zone         string `protobuf:"bytes,3,opt,name=zone" json:"zone,omitempty"`
	InstanceName string `protobuf:"bytes,4,opt,name=instanceName" json:"instanceName,omitempty"`
}

func (m *DeleteInstanceRequest) Reset()                    { *m = DeleteInstanceRequest{} }
func (m *DeleteInstanceRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteInstanceRequest) ProtoMessage()               {}
func (*DeleteInstanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeleteInstanceRequest) GetCompanyId() int32 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

func (m *DeleteInstanceRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *DeleteInstanceRequest) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *DeleteInstanceRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

type DeleteInstanceResponse struct {
	Status              string                           `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	HttpStatusCode      int64                            `protobuf:"varint,2,opt,name=httpStatusCode" json:"httpStatusCode,omitempty"`
	HttpErrorStatusCode int64                            `protobuf:"varint,3,opt,name=httpErrorStatusCode" json:"httpErrorStatusCode,omitempty"`
	HttpErrorMessage    string                           `protobuf:"bytes,4,opt,name=httpErrorMessage" json:"httpErrorMessage,omitempty"`
	Errors              []*DeleteInstanceResponse_ERRORS `protobuf:"bytes,5,rep,name=errors" json:"errors,omitempty"`
}

func (m *DeleteInstanceResponse) Reset()                    { *m = DeleteInstanceResponse{} }
func (m *DeleteInstanceResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteInstanceResponse) ProtoMessage()               {}
func (*DeleteInstanceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteInstanceResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DeleteInstanceResponse) GetHttpStatusCode() int64 {
	if m != nil {
		return m.HttpStatusCode
	}
	return 0
}

func (m *DeleteInstanceResponse) GetHttpErrorStatusCode() int64 {
	if m != nil {
		return m.HttpErrorStatusCode
	}
	return 0
}

func (m *DeleteInstanceResponse) GetHttpErrorMessage() string {
	if m != nil {
		return m.HttpErrorMessage
	}
	return ""
}

func (m *DeleteInstanceResponse) GetErrors() []*DeleteInstanceResponse_ERRORS {
	if m != nil {
		return m.Errors
	}
	return nil
}

type DeleteInstanceResponse_ERRORS struct {
	Code     string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Location string `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	Message  string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteInstanceResponse_ERRORS) Reset()         { *m = DeleteInstanceResponse_ERRORS{} }
func (m *DeleteInstanceResponse_ERRORS) String() string { return proto.CompactTextString(m) }
func (*DeleteInstanceResponse_ERRORS) ProtoMessage()    {}
func (*DeleteInstanceResponse_ERRORS) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

func (m *DeleteInstanceResponse_ERRORS) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DeleteInstanceResponse_ERRORS) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *DeleteInstanceResponse_ERRORS) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetInstanceRequest struct {
	CompanyId    int32  `protobuf:"varint,1,opt,name=companyId" json:"companyId,omitempty"`
	Project      string `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
	Zone         string `protobuf:"bytes,3,opt,name=zone" json:"zone,omitempty"`
	InstanceName string `protobuf:"bytes,4,opt,name=instanceName" json:"instanceName,omitempty"`
}

func (m *GetInstanceRequest) Reset()                    { *m = GetInstanceRequest{} }
func (m *GetInstanceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetInstanceRequest) ProtoMessage()               {}
func (*GetInstanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetInstanceRequest) GetCompanyId() int32 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

func (m *GetInstanceRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *GetInstanceRequest) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *GetInstanceRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

type GetInstanceResponse struct {
	Status      string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Preemptible bool   `protobuf:"varint,4,opt,name=preemptible" json:"preemptible,omitempty"`
}

func (m *GetInstanceResponse) Reset()                    { *m = GetInstanceResponse{} }
func (m *GetInstanceResponse) String() string            { return proto.CompactTextString(m) }
func (*GetInstanceResponse) ProtoMessage()               {}
func (*GetInstanceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetInstanceResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *GetInstanceResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetInstanceResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetInstanceResponse) GetPreemptible() bool {
	if m != nil {
		return m.Preemptible
	}
	return false
}

func init() {
	proto.RegisterType((*CreateInstanceRequest)(nil), "CreateInstanceRequest")
	proto.RegisterType((*CreateInstanceRequest_TAGS)(nil), "CreateInstanceRequest.TAGS")
	proto.RegisterType((*CreateInstanceRequest_DISKS)(nil), "CreateInstanceRequest.DISKS")
	proto.RegisterType((*CreateInstanceRequest_DISKS_INITIALIZEPARAMS)(nil), "CreateInstanceRequest.DISKS.INITIALIZEPARAMS")
	proto.RegisterType((*CreateInstanceRequest_NETWORKINTERFACES)(nil), "CreateInstanceRequest.NETWORKINTERFACES")
	proto.RegisterType((*CreateInstanceRequest_NETWORKINTERFACES_ACCESSCONFIGS)(nil), "CreateInstanceRequest.NETWORKINTERFACES.ACCESSCONFIGS")
	proto.RegisterType((*CreateInstanceRequest_NETWORKINTERFACES_ALIASIPRANGES)(nil), "CreateInstanceRequest.NETWORKINTERFACES.ALIASIPRANGES")
	proto.RegisterType((*CreateInstanceRequest_SCHEDULING)(nil), "CreateInstanceRequest.SCHEDULING")
	proto.RegisterType((*CreateInstanceResponse)(nil), "CreateInstanceResponse")
	proto.RegisterType((*DeleteInstanceRequest)(nil), "DeleteInstanceRequest")
	proto.RegisterType((*DeleteInstanceResponse)(nil), "DeleteInstanceResponse")
	proto.RegisterType((*DeleteInstanceResponse_ERRORS)(nil), "DeleteInstanceResponse.ERRORS")
	proto.RegisterType((*GetInstanceRequest)(nil), "GetInstanceRequest")
	proto.RegisterType((*GetInstanceResponse)(nil), "GetInstanceResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Instance service

type InstanceClient interface {
	CreateInstance(ctx context.Context, in *CreateInstanceRequest, opts ...client.CallOption) (*CreateInstanceResponse, error)
	DeleteInstance(ctx context.Context, in *DeleteInstanceRequest, opts ...client.CallOption) (*DeleteInstanceResponse, error)
	GetInstance(ctx context.Context, in *GetInstanceRequest, opts ...client.CallOption) (*GetInstanceResponse, error)
}

type instanceClient struct {
	c           client.Client
	serviceName string
}

func NewInstanceClient(serviceName string, c client.Client) InstanceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "instance"
	}
	return &instanceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *instanceClient) CreateInstance(ctx context.Context, in *CreateInstanceRequest, opts ...client.CallOption) (*CreateInstanceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Instance.CreateInstance", in)
	out := new(CreateInstanceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceClient) DeleteInstance(ctx context.Context, in *DeleteInstanceRequest, opts ...client.CallOption) (*DeleteInstanceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Instance.DeleteInstance", in)
	out := new(DeleteInstanceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceClient) GetInstance(ctx context.Context, in *GetInstanceRequest, opts ...client.CallOption) (*GetInstanceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Instance.GetInstance", in)
	out := new(GetInstanceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Instance service

type InstanceHandler interface {
	CreateInstance(context.Context, *CreateInstanceRequest, *CreateInstanceResponse) error
	DeleteInstance(context.Context, *DeleteInstanceRequest, *DeleteInstanceResponse) error
	GetInstance(context.Context, *GetInstanceRequest, *GetInstanceResponse) error
}

func RegisterInstanceHandler(s server.Server, hdlr InstanceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Instance{hdlr}, opts...))
}

type Instance struct {
	InstanceHandler
}

func (h *Instance) CreateInstance(ctx context.Context, in *CreateInstanceRequest, out *CreateInstanceResponse) error {
	return h.InstanceHandler.CreateInstance(ctx, in, out)
}

func (h *Instance) DeleteInstance(ctx context.Context, in *DeleteInstanceRequest, out *DeleteInstanceResponse) error {
	return h.InstanceHandler.DeleteInstance(ctx, in, out)
}

func (h *Instance) GetInstance(ctx context.Context, in *GetInstanceRequest, out *GetInstanceResponse) error {
	return h.InstanceHandler.GetInstance(ctx, in, out)
}

func init() { proto.RegisterFile("proto/createInstance.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1059 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xae, 0xf3, 0xb7, 0xe9, 0xc9, 0xa6, 0xb4, 0xd3, 0xdd, 0xae, 0x65, 0xaa, 0x55, 0x88, 0x10,
	0x8a, 0x10, 0x78, 0x51, 0x91, 0x16, 0x28, 0x5c, 0x10, 0xb9, 0x69, 0xd6, 0xda, 0x36, 0xad, 0xc6,
	0x05, 0x04, 0xe2, 0x66, 0x62, 0x4f, 0xdb, 0xa1, 0xf1, 0x8c, 0xf1, 0x4c, 0x76, 0xd5, 0x5e, 0x23,
	0xc1, 0x9b, 0xf0, 0x1e, 0x3c, 0xc1, 0xf2, 0x46, 0x68, 0xc6, 0x4e, 0x6a, 0xe7, 0x07, 0xd8, 0x0b,
	0xc4, 0xdd, 0x9c, 0x6f, 0xce, 0x7c, 0xe7, 0xf8, 0x9c, 0xef, 0xcc, 0x18, 0x9c, 0x24, 0x15, 0x4a,
	0x3c, 0x0b, 0x53, 0x4a, 0x14, 0xf5, 0xb9, 0x54, 0x84, 0x87, 0xd4, 0x35, 0x60, 0xf7, 0xcf, 0x36,
	0x3c, 0xf6, 0x4a, 0x1b, 0x98, 0xfe, 0x3c, 0xa5, 0x52, 0xa1, 0x7d, 0xd8, 0x0c, 0x45, 0x9c, 0x10,
	0x7e, 0xeb, 0x47, 0xb6, 0xd5, 0xb1, 0x7a, 0x75, 0x7c, 0x0f, 0x20, 0x1b, 0x1e, 0x24, 0xa9, 0xf8,
	0x89, 0x86, 0xca, 0xae, 0x74, 0xac, 0xde, 0x26, 0x9e, 0x99, 0x08, 0x41, 0xed, 0x4e, 0x70, 0x6a,
	0x57, 0x0d, 0x6c, 0xd6, 0x9a, 0x2b, 0xcd, 0x68, 0xfd, 0xc8, 0xae, 0x99, 0x8d, 0x7b, 0x00, 0x75,
	0xe1, 0x21, 0xcb, 0x83, 0x8f, 0x48, 0x4c, 0xed, 0xba, 0x71, 0x28, 0x61, 0xe8, 0x03, 0xd8, 0x8a,
	0x19, 0xf7, 0x92, 0xe9, 0xf9, 0x84, 0xa8, 0x4b, 0x91, 0xc6, 0x76, 0xc3, 0x78, 0x2d, 0xa0, 0xa8,
	0x03, 0xad, 0x98, 0x84, 0xd7, 0x8c, 0xd3, 0x8b, 0xdb, 0x84, 0xda, 0x0f, 0x8c, 0x53, 0x11, 0x42,
	0x5f, 0x43, 0x33, 0xa6, 0x8a, 0x44, 0x44, 0x11, 0xbb, 0xd9, 0xa9, 0xf6, 0x5a, 0x07, 0xef, 0xbb,
	0x2b, 0x2b, 0xe0, 0x9e, 0xe6, 0x6e, 0x03, 0xae, 0xd2, 0x5b, 0x3c, 0x3f, 0x85, 0x9e, 0x41, 0x4d,
	0x91, 0x2b, 0x69, 0x6f, 0x76, 0xac, 0x5e, 0xeb, 0xe0, 0xdd, 0x35, 0xa7, 0x2f, 0xfa, 0xc3, 0x00,
	0x1b, 0x47, 0x74, 0x00, 0xf5, 0x88, 0xc9, 0x1b, 0x69, 0x83, 0x89, 0xb7, 0xbf, 0xe6, 0xc4, 0x91,
	0x1f, 0xbc, 0x0c, 0x70, 0xe6, 0xaa, 0x8b, 0x12, 0x12, 0xee, 0x27, 0xc7, 0x22, 0x7d, 0x4d, 0xd2,
	0xc8, 0x6e, 0x75, 0xac, 0x5e, 0x13, 0x97, 0x30, 0xf4, 0x2d, 0xec, 0x70, 0xaa, 0x5e, 0x8b, 0xf4,
	0xc6, 0xe7, 0x8a, 0xa6, 0x97, 0x24, 0xa4, 0xd2, 0x7e, 0x68, 0x62, 0xf4, 0xd6, 0xc4, 0x18, 0x0d,
	0x2e, 0xbe, 0x3b, 0xc3, 0x2f, 0xfd, 0xd1, 0xc5, 0x00, 0x1f, 0xf7, 0xbd, 0x41, 0x80, 0x97, 0x29,
	0x74, 0x11, 0x23, 0x2a, 0xc3, 0x94, 0x25, 0x8a, 0x09, 0x6e, 0xb7, 0xb3, 0x22, 0x16, 0x20, 0x74,
	0x08, 0x8d, 0x09, 0x19, 0xd3, 0x89, 0xb4, 0xb7, 0x4c, 0xb8, 0xee, 0x9a, 0x70, 0x27, 0xc6, 0x29,
	0x2b, 0x60, 0x7e, 0x02, 0xf5, 0x01, 0x64, 0x78, 0x4d, 0xa3, 0xe9, 0x84, 0xf1, 0x2b, 0xfb, 0x1d,
	0x53, 0xc4, 0xf7, 0xd6, 0x9c, 0x0f, 0xbc, 0x17, 0x83, 0xa3, 0x6f, 0x4e, 0xfc, 0xd1, 0x10, 0x17,
	0x0e, 0x39, 0x5f, 0x42, 0xbb, 0xd4, 0x1c, 0xb4, 0x0d, 0xd5, 0x1b, 0x7a, 0x6b, 0x64, 0xba, 0x89,
	0xf5, 0x12, 0x3d, 0x82, 0xfa, 0x2b, 0x32, 0x99, 0xd2, 0x5c, 0x9e, 0x99, 0x71, 0x58, 0xf9, 0xdc,
	0x72, 0xf6, 0xa1, 0xa6, 0x7b, 0xa3, 0x3d, 0x98, 0xa2, 0xb1, 0xb4, 0xad, 0x4e, 0x55, 0x7b, 0x18,
	0xc3, 0x79, 0x53, 0x81, 0xba, 0x69, 0x84, 0x16, 0xb2, 0xd2, 0x1a, 0xca, 0x48, 0xcd, 0x5a, 0x63,
	0x63, 0x21, 0x32, 0xcd, 0x37, 0xb1, 0x59, 0x6b, 0x2c, 0x16, 0xd1, 0x5c, 0xf0, 0x7a, 0x8d, 0x9e,
	0x02, 0x90, 0xa9, 0x12, 0x47, 0x74, 0x42, 0x15, 0x35, 0x8a, 0x6f, 0xe2, 0x02, 0xa2, 0xf7, 0x23,
	0xfa, 0x8a, 0x95, 0x04, 0x5f, 0x40, 0xd0, 0xf7, 0xb0, 0xcd, 0x38, 0x53, 0x8c, 0x4c, 0xd8, 0x1d,
	0x3d, 0x27, 0x29, 0x89, 0xa5, 0x11, 0x7c, 0xeb, 0xe0, 0xe3, 0xbf, 0x13, 0x8f, 0xeb, 0x8f, 0xfc,
	0x0b, 0xbf, 0x7f, 0xe2, 0xff, 0x30, 0x38, 0xef, 0xe3, 0xfe, 0x69, 0x80, 0x97, 0x68, 0x9c, 0x04,
	0xb6, 0x17, 0xbd, 0x74, 0xc3, 0xa5, 0x98, 0xa6, 0x21, 0xf5, 0x63, 0x72, 0x35, 0xfb, 0xe2, 0x22,
	0x84, 0x1c, 0x68, 0x6a, 0x5d, 0x9a, 0xa1, 0xca, 0x2a, 0x3a, 0xb7, 0xcd, 0xc7, 0x30, 0x79, 0x13,
	0xb0, 0x3b, 0x3a, 0x1c, 0x9b, 0x32, 0x54, 0x71, 0x01, 0x71, 0x7e, 0xaf, 0xc2, 0xce, 0x92, 0xee,
	0xf4, 0x0d, 0x92, 0x2b, 0x2f, 0x8f, 0x37, 0x33, 0x35, 0x9f, 0x9c, 0x8e, 0x67, 0x9b, 0x59, 0xb4,
	0x02, 0x82, 0x7e, 0x84, 0x36, 0x09, 0x43, 0x2a, 0xa5, 0x27, 0xf8, 0x25, 0xbb, 0x92, 0x76, 0xd5,
	0x68, 0xf0, 0xf9, 0xbf, 0x95, 0xbc, 0xdb, 0xf7, 0xbc, 0x41, 0x10, 0x78, 0x67, 0xa3, 0x63, 0x7f,
	0x18, 0xe0, 0x32, 0x99, 0x61, 0x9f, 0x30, 0x22, 0xfd, 0x04, 0x13, 0x7e, 0x45, 0xa5, 0x5d, 0x7b,
	0x5b, 0xf6, 0x13, 0xbf, 0x1f, 0xf8, 0xe7, 0xb8, 0x3f, 0x1a, 0x0e, 0x34, 0x7b, 0x91, 0xcc, 0xf9,
	0x0c, 0xda, 0xa5, 0xe8, 0x5a, 0x3d, 0x5c, 0x6b, 0x20, 0x57, 0x99, 0x5e, 0xcf, 0x95, 0x57, 0xb9,
	0x57, 0x9e, 0x13, 0x42, 0xbb, 0x44, 0xac, 0x7b, 0xc6, 0x12, 0x8f, 0x45, 0xa9, 0x61, 0x9e, 0xf5,
	0xac, 0x00, 0xa1, 0x4f, 0x60, 0xf7, 0xbe, 0x6a, 0x06, 0x32, 0x6a, 0xcb, 0x58, 0x57, 0x6d, 0x39,
	0x5f, 0x40, 0xab, 0x30, 0xb1, 0x6f, 0x35, 0x55, 0xbf, 0x59, 0x00, 0xf7, 0xd3, 0xaa, 0xb3, 0x4b,
	0x52, 0x4a, 0xe3, 0x44, 0xb1, 0xf1, 0x24, 0xcb, 0xae, 0x89, 0x8b, 0x10, 0xfa, 0x08, 0x76, 0x04,
	0x7f, 0x21, 0xa4, 0x3a, 0x25, 0x8c, 0x2b, 0xca, 0x75, 0x51, 0x73, 0xda, 0xe5, 0x0d, 0xf4, 0x21,
	0x6c, 0xeb, 0xf1, 0x89, 0x89, 0x62, 0x21, 0xa6, 0x52, 0x91, 0x54, 0x19, 0xa5, 0x35, 0xf1, 0x12,
	0xde, 0xfd, 0x0a, 0xf6, 0x16, 0x7b, 0x25, 0x13, 0xc1, 0x25, 0x5d, 0x7a, 0x69, 0xac, 0xe5, 0x97,
	0xa6, 0xfb, 0xab, 0x05, 0x8f, 0xb3, 0x29, 0xfd, 0x2f, 0x5f, 0xc4, 0xc5, 0x4c, 0x6a, 0x2b, 0x32,
	0xf9, 0xa3, 0x02, 0x7b, 0x8b, 0x99, 0xe4, 0x1f, 0xb2, 0x07, 0x0d, 0xa9, 0x88, 0x9a, 0xca, 0xfc,
	0x13, 0x72, 0x4b, 0x3f, 0x93, 0xd7, 0x4a, 0x25, 0x81, 0xb1, 0x3c, 0x7d, 0x2b, 0x55, 0xcc, 0x38,
	0x2e, 0xa0, 0x5a, 0x1a, 0x1a, 0x19, 0xa4, 0xa9, 0x48, 0x0b, 0xce, 0xd9, 0xec, 0xae, 0xda, 0xd2,
	0x0d, 0x98, 0xc3, 0xa7, 0x54, 0x4a, 0x7d, 0x4f, 0x64, 0x49, 0x2f, 0xe1, 0xe8, 0x39, 0x34, 0xa8,
	0xb6, 0xa5, 0x5d, 0x37, 0xb3, 0xf3, 0xd4, 0x5d, 0xfd, 0x19, 0xee, 0x00, 0xe3, 0x33, 0x1c, 0xe0,
	0xdc, 0xdb, 0xc1, 0xd0, 0xc8, 0x10, 0x5d, 0xb2, 0x50, 0x27, 0x94, 0x4f, 0x85, 0x5e, 0xeb, 0x2b,
	0x68, 0x22, 0x42, 0x62, 0x9e, 0xa4, 0xfc, 0x0a, 0x9a, 0xd9, 0xba, 0xf8, 0x71, 0x9e, 0x54, 0x56,
	0xe5, 0x99, 0xd9, 0xfd, 0xc5, 0x02, 0x34, 0xa4, 0xea, 0xff, 0xee, 0xa5, 0x84, 0xdd, 0x52, 0x16,
	0xff, 0xd0, 0xc7, 0x2d, 0xa8, 0xb0, 0xc8, 0xc4, 0xae, 0xe1, 0x0a, 0x8b, 0xe6, 0xb7, 0x44, 0xb5,
	0x70, 0x4b, 0x2c, 0x8c, 0x58, 0x6d, 0x69, 0xc4, 0x0e, 0xde, 0x58, 0xd0, 0x9c, 0x85, 0x44, 0x1e,
	0x6c, 0x95, 0xa7, 0x02, 0xed, 0xad, 0xbe, 0xd2, 0x9c, 0x27, 0xee, 0xea, 0xf1, 0xe9, 0x6e, 0x68,
	0x92, 0x72, 0x2b, 0xd1, 0x9e, 0xbb, 0x72, 0x58, 0x9c, 0x27, 0x6b, 0x7a, 0xde, 0xdd, 0x40, 0x87,
	0xd0, 0x2a, 0xd4, 0x02, 0xed, 0xba, 0xcb, 0xfd, 0x71, 0x1e, 0xb9, 0x2b, 0xca, 0xd5, 0xdd, 0x18,
	0x37, 0xcc, 0x6f, 0xeb, 0xa7, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0xf8, 0x21, 0x42, 0x6a, 0xd4,
	0x0a, 0x00, 0x00,
}
